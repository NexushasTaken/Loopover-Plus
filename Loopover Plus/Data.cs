// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Loopover_Plus;
//
//    var data = Data.FromJson(jsonString);

namespace Loopover_Plus
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Data
    {
        [JsonProperty("Controls")]
        public Controls Controls { get; set; }

        [JsonProperty("Saves")]
        public Dictionary<string, Save> Saves { get; set; }

        [JsonProperty("Solves")]
        public int Solves { get; set; }
    }

    public partial class Controls
    {
        [JsonProperty("CursorData")]
        public CursorControl CursorData { get; set; }

        [JsonProperty("Move")]
        public Move Move { get; set; }

        [JsonProperty("Help")]
        public ConsoleKey Help { get; set; }

        [JsonProperty("Credits")]
        public ConsoleKey Credits { get; set; }

        [JsonProperty("Restart")]
        public ConsoleKey Restart { get; set; }

        [JsonProperty("NewGame")]
        public ConsoleKey NewGame { get; set; }

        [JsonProperty("ExitMenu")]
        public ConsoleKey ExitMenu { get; set; }

        [JsonProperty("GameMenu")]
        public ConsoleKey GameMenu { get; set; }
    }

    public partial class CursorControl
    {
        [JsonProperty("CUp")]
        public ConsoleKey CUp { get; set; }

        [JsonProperty("CDown")]
        public ConsoleKey CDown { get; set; }

        [JsonProperty("CLeft")]
        public ConsoleKey CLeft { get; set; }

        [JsonProperty("CRight")]
        public ConsoleKey CRight { get; set; }
    }

    public partial class Move
    {
        [JsonProperty("MUp")]
        public ConsoleKey MUp { get; set; }

        [JsonProperty("MDown")]
        public ConsoleKey MDown { get; set; }

        [JsonProperty("MLeft")]
        public ConsoleKey MLeft { get; set; }

        [JsonProperty("MRight")]
        public ConsoleKey MRight { get; set; }
    }

    public partial class Data
    {
        public static Data FromJson(string json) => JsonConvert.DeserializeObject<Data>(json, Loopover_Plus.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Data self) => JsonConvert.SerializeObject(self, Loopover_Plus.Converter.Settings);
    }

    static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
            Formatting = Formatting.Indented
        };
    }
}
